name: Deploy Weather App to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Setup and build C# backend
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore C# dependencies
        run: |
          cd WeatherApp_BE
          dotnet restore
      
      - name: Build C# project
        run: |
          cd WeatherApp_BE
          dotnet build --configuration Release
      
      - name: Publish C# project
        run: |
          cd WeatherApp_BE
          dotnet publish --configuration Release --output ./publish
      
      # Setup and build Angular frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './Angular/package-lock.json'
      
      - name: Install Angular dependencies
        run: |
          cd Angular
          npm ci
      
      # Update API URL to use GitHub Pages hosted backend API
      - name: Update API URL for production
        run: |
          cd Angular/src/app
          sed -i 's|http://localhost:5103/api/weather|https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/api/weather|g' weather.service.ts
      
      - name: Build Angular app
        run: |
          cd Angular
          npm run build -- --configuration production --base-href "/${{ github.event.repository.name }}/"
      
      # Combine backend and frontend for deployment
      - name: Copy backend to dist
        run: |
          mkdir -p ./Angular/dist/angular/browser/api
          cp -r ./WeatherApp_BE/publish/* ./Angular/dist/angular/browser/api/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './Angular/dist/angular/browser'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
